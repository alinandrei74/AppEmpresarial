"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const workScheduleController_1 = require("../controllers/workScheduleController");
const authRole_1 = require("../middlewares/authRole");
const authMiddleware_1 = require("../middlewares/authMiddleware");
const validateRequest_1 = require("../middlewares/validateRequest");
const validationSchemas_1 = require("../validators/validationSchemas");
const router = (0, express_1.Router)();
router.get('/', authMiddleware_1.authenticateToken, (0, authRole_1.authorizeRole)('work_schedules', 'read'), workScheduleController_1.getAllWorkSchedules);
router.get('/:id', authMiddleware_1.authenticateToken, (0, validateRequest_1.validateRequest)(validationSchemas_1.workScheduleIdSchema, 'params'), (0, authRole_1.authorizeRole)('work_schedules', 'read'), workScheduleController_1.getWorkScheduleById);
router.post('/', authMiddleware_1.authenticateToken, (0, authRole_1.authorizeRole)('work_schedules', 'create'), (0, validateRequest_1.validateRequest)(validationSchemas_1.createWorkScheduleSchema, 'body'), workScheduleController_1.createWorkSchedule);
router.put('/:id', authMiddleware_1.authenticateToken, (0, authRole_1.authorizeRole)('work_schedules', 'update'), (0, validateRequest_1.validateRequest)(validationSchemas_1.workScheduleIdSchema, 'params'), (0, validateRequest_1.validateRequest)(validationSchemas_1.updateWorkScheduleSchema, 'body'), workScheduleController_1.updateWorkSchedule);
router.delete('/:id', authMiddleware_1.authenticateToken, (0, authRole_1.authorizeRole)('work_schedules', 'delete'), (0, validateRequest_1.validateRequest)(validationSchemas_1.workScheduleIdSchema, 'params'), workScheduleController_1.deleteWorkSchedule);
exports.default = router;
